FORMAT: 1A
HOST: http://api.tidepool.io

# Tidepool Seagull
**"An archive is a dump without the seagulls."** -- *Perfesser Shoe, 1990 (McNally)*

Seagull stores metadata about users. 

Initially, it just stores blobs of JSON bound to a user ID, but the intent is that said blobs will have specific, 
versionable format types that will be registered with the API and enforced by it.

# Group Metadata
Stores and retrieves blobs of JSON.

## Metadata Collection [/metadata]
### Get permissible collections [GET]
Retrieves the set of allowed collection names. Initially, this is only 'profile'. 
Someday this will also return the definitions of schema for the collections. But not yet.

+ Request

    A current session token must come from the user-api.

    + Headers

            x-tidepool-session-token : 23sadf87.123840.aasd90JKj

+ Response 200

        [
            "profile"
        ]

## Metadata manipulation [/metadata/{collection}/{userhash}]
### Create a metadata record [POST]
+ Parameters
    + collection (required, string, `profile`) ... A collection type from one of the registered types. Initially, this is only 'profile'.
    + userhash (required, string, `userhash`) ... The hash id for the user for whom this data is being stored. Please DO NOT use the user ID;
    the point is to have a one-way link from the user data to the metadata, but not the other way around.

+ Request
    + Headers

            x-tidepool-session-token : 23sadf87.123840.aasd90JKj

    + Body

            {
                "given_name": "Jonathan", 
                "surname": "Livingston", 
                "summary": "I fly far and fast. T1D is something I have, not who I am.",
                "image_url": "https://files.tidepool.io/87263b8476fad2836486af125/me.jpg",
                "diagnosis_year": 2010, 
                "diagnosis_month": 6,
                "diagnosis_day": 0
            }    

+ Response 201

        If the record was created.

+ Response 422

        If the record could not be created because a record with that value already exists

### Update a metadata record [PUT]
+ Parameters
    + collection (required, string, `profile`) ... A collection type from one of the registered types. Initially, this is only 'profile'.
    + userhash (required, string, `userhash`) ... The hash id for the user for whom this data is being stored. Please DO NOT use the user ID;
    the point is to have a one-way link from the user data to the metadata, but not the other way around.

+ Request
Body should contain only the fields that should be updated. They must be fields in the schema. 

    + Headers

            x-tidepool-session-token : 23sadf87.123840.aasd90JKj

    + Body

            {
                "summary": "Burrito ergo sum."
            }    

+ Response 200

        If the record was updated. 

+ Response 404

        If the record addressed could not be found in the database.

### Retrieve a metadata record [GET]
+ Parameters
    + collection (required, string, `profile`) ... A collection type from one of the registered types. Initially, this is only 'profile'.
    + userhash (required, string, `userhash`) ... The hash id for the user for whom this data is being stored. Please DO NOT use the user ID;
    the point is to have a one-way link from the user data to the metadata, but not the other way around.

+ Request
    + Headers

            x-tidepool-session-token : 23sadf87.123840.aasd90JKj


+ Response 200 (application/json)

        If the record was retrieved.


        {
            "given_name": "Jonathan", 
            "surname": "Livingston", 
            "summary": "I fly far and fast. T1D is something I have, not who I am.",
            "image_url": "https://files.tidepool.io/87263b8476fad2836486af125/me.jpg",
            "diagnosis_year": 2010, 
            "diagnosis_month": 6,
            "diagnosis_day": 0
        }    

+ Response 404

        If the record was not found.

### Remove a metadata record [DELETE]
+ Parameters
    + collection (required, string, `profile`) ... A collection type from one of the registered types. Initially, this is only 'profile'.
    + userhash (required, string, `userhash`) ... The hash id for the user for whom this data is being stored. Please DO NOT use the user ID;
    the point is to have a one-way link from the user data to the metadata, but not the other way around.

+ Request
    + Headers

            x-tidepool-session-token : 23sadf87.123840.aasd90JKj


+ Response 200

        If the record was retrieved.

+ Response 404

        If the record was not found.



